{"version":3,"sources":["node_modules/browser-pack/_prelude.js","primo-explore/custom/Lirias/js/components.js","primo-explore/custom/Lirias/js/main.js","primo-explore/custom/Lirias/js/utils.js"],"names":[],"mappings":"AAAA;;;;;;;qjBCAA;;;;;;;;;;;AASA;;;;AAEA;AACA;AACA;;AAEA;;;;;IAKqB,e;;;;;;;wBAEF;AACf;;;;;;;;;;;AAYA,aAAO;AACL;AACH;AACH;;;;AAHW,QAOL,MAPK,CAOE,UAAC,CAAD;AAAA,eAAO,EAAE,OAAT;AAAA,OAPF,CAAP;AAQD;;;;;;kBAvBkB,e;;;ACpBrB;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;AAKA;AACA;;AACA,CAAC,UAAS,IAAT,EAAe;AACd,UAAQ,OAAR,GAAkB,EAAlB;AACA,UAAQ,MAAR,GAAiB,YAAW;AACxB,QAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AACtB,cAAQ,OAAR,CAAgB,IAAhB,CAAqB,UAAU,CAAV,CAArB;AACH;AACD,WAAO,KAAK,KAAL,CAAW,IAAX,EAAiB,SAAjB,CAAP;AACH,GALD;AAMD,CARD,EAQG,QAAQ,MARX;AASA;;AAEA;AACA,IAAI,MAAM,QAAQ,MAAR,CAAe,YAAf,EAA6B,EAA7B,EACP,MADO,CACA,UAAC,oBAAD,EAA0B;AAChC,uBAAqB,oBAArB,CAA0C,CACxC,IADwC,CAA1C;AAGD,CALO,EAMP,GANO,CAMH,UAAC,cAAD,EAAoB;AACvB,iBAAe,GAAf,CAAmB,sCAAnB,EAA2D,UAA3D;AACA,iBAAe,GAAf,CAAmB,kDAAnB,EAAuE,kBAAvE;AACA,iBAAe,GAAf,CAAmB,wCAAnB,EAA4D,cAA5D;AACD,CAVO,CAAV;AAWA;AACA,IAAI,kBAAkB,EAAtB;;AAEA;AACA;AACA,QAAQ,GAAR,CAAY,oBAAZ;AACA,qBAAW,GAAX,CAAe,OAAf,CAAuB,UAAC,SAAD,EAAe;AACpC,MAAI,UAAU,QAAd,EAAwB;AACtB,QAAI,WAAW,gBAAgB,UAAU,QAA1B,KAAuC,EAAtD;AACA,aAAS,IAAT,CAAc,UAAU,IAAxB;AACA,oBAAgB,UAAU,QAA1B,IAAsC,QAAtC;AACD;;AAED,UAAQ,GAAR,UAAmB,UAAU,IAA7B;AACA,MAAI,SAAJ,CAAc,UAAU,IAAV,CAAe,WAAf,EAAd,EAA4C,UAAU,MAAtD;AACD,CATD;;AAWA;AACA,OAAO,IAAP,CAAY,eAAZ,EAA6B,OAA7B,CAAqC,UAAC,SAAD,EAAY,CAAZ,EAAkB;AACrD,MAAI,gBAAgB,gBAAgB,SAAhB,CAApB;;AAEA,MAAI,SAAJ,CAAc,UAAU,WAAV,EAAd,EAAuC;AACrC,cAAU;AACR,kBAAY;AADJ,KAD2B;AAIrC,cAAU,cAAc,GAAd,CAAkB;AAAA,mBAAS,CAAT,+BAAoC,CAApC;AAAA,KAAlB,EAA4D,IAA5D,CAAiE,EAAjE;AAJ2B,GAAvC;AAMD,CATD;;;;;AC5DA;;;;;;AAMA,OAAO,SAAP,CAAiB,WAAjB,GAA+B,YAAW;AACxC,SAAO,KAAK,KAAL,CAAW,GAAX,EAAgB,GAAhB,CAAoB,UAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAAA,WAAY,IAAI,CAAJ,GAAQ,EAAE,MAAF,CAAS,CAAT,EAAY,WAAZ,KAA4B,EAAE,KAAF,CAAQ,CAAR,CAApC,GAAgD,CAA5D;AAAA,GAApB,EAAmF,IAAnF,CAAwF,EAAxF,CAAP;AACD,CAFD","file":"custom.js","sourceRoot":"/source/","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\n  Declare your components here.\n\n  Rewrite this when imports can be done dynamically\n  http://2ality.com/2017/01/import-operator.html\n\n  KULeuven/LIBIS (c) 2017\n  Mehmet Celik\n*/\nimport './utils'\n\n/* import your component configuration*/\n// TODO: Creating a language switch\n//import {changeLangConfig} from './components/general/changeLang'\n\n/*\nimport {camTabsConfig} from './components/general/camTabs'\nimport {camBrowseButtonConfig} from './components/general/camBrowseButton'\n*/\n\nexport default class AfterComponents {\n\n  static get all() {\n    /*\n      name = the sub element in the after element\n      config = the imported configuration object\n      enabled = true/false should the component be created\n      appendTo = The component should be created in this after component.\n\n      ex. {name: 'home-icon', config: homeIconConfig, enabled: true, appendTo: 'prm-logo-after'}\n      results in:\n        <prm-logo-after parentCtrl='$ctrl'>\n          <home-icon parentCtrl='$ctrl'></home-icon>\n        </prm-logo-after>\n    */\n    return [\n      // TODO: Creating a language switch  \n   //   {name: 'change-lang', config: changeLangConfig, enabled: true, appendTo: null}\n/*\n      {name: 'cam-tabs', config: camTabsConfig, enabled: true, appendTo: null},\n      {name: 'cam-browse-button', config: camBrowseButtonConfig, enabled: true, appendTo: null}\n  */    \n    ].filter((m) => m.enabled);\n  }\n\n}\n","/*\n  ViewCustom Package Loader Lirias\n  Based on cambridge-search-bar-tabs (Mehmet Celik)\n\n  Do NOT edit this file.\n  All components are declared in \"components.js\"\n\n  KULeuven/LIBIS (c) 2017\n  Tom Vanmechelen \n*/\n\"use strict\";\n\nimport Components from './components'\nimport topbarHTML from './components/general/topbar.html'\nimport topbarMainMenuHTML from './components/general/topbar-main-menu.html'\nimport changeLangHTML from './components/general/changeLang.html'\n\n/* angular.modules is nu beschikbaar in de console */\n/***************************************************/\n(function(orig) {\n  angular.modules = [];\n  angular.module = function() {\n      if (arguments.length > 1) {\n          angular.modules.push(arguments[0]);\n      }\n      return orig.apply(null, arguments);\n  }\n})(angular.module);\n/***************************************************/\n\n//Create the centralCustom module;\nlet app = angular.module('viewCustom', [])\n  .config(($sceDelegateProvider) => {\n    $sceDelegateProvider.resourceUrlWhitelist([\n      '**'\n    ]);\n  })\n  .run(($templateCache) => {\n    $templateCache.put('components/search/topbar/topbar.html', topbarHTML);\n    $templateCache.put('components/search/topbar/mainMenu/main-menu.html', topbarMainMenuHTML);\n    $templateCache.put('components/infra/lang/change-lang.html',changeLangHTML);\n  });\n//Contains the after component selectors that will be injected\nlet afterComponents = {};\n\n//Create all components and determine in which after component these need to be\n//injected\nconsole.log('Loading components');\nComponents.all.forEach((component) => {\n  if (component.appendTo) {\n    let elements = afterComponents[component.appendTo] || [];\n    elements.push(component.name);\n    afterComponents[component.appendTo] = elements;\n  }\n\n  console.log(`\\t\\t${component.name}`);\n  app.component(component.name.toCamelCase(), component.config);\n});\n\n//Inject place holders into the after components\nObject.keys(afterComponents).forEach((component, i) => {\n  let subComponents = afterComponents[component];\n\n  app.component(component.toCamelCase(), {\n    bindings: {\n      parentCtrl: '<'\n    },\n    template: subComponents.map(m => `<${m} parent-ctrl=\"$ctrl\"></${m}>`).join(\"\")\n  });\n});\n","/*\n  General \n\n  KULeuven/LIBIS (c) 2017\n  Mehmet Celik\n*/\nString.prototype.toCamelCase = function() {\n  return this.split('-').map((d,i,a) =>  i > 0 ? d.charAt(0).toUpperCase() + d.slice(1) :d).join('');\n}\n"]}